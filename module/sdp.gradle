apply plugin: 'com.android.library'
apply plugin: 'maven'

def getReleaseRepositoryUrl() {
    return "http://nexus.sdp.nd/nexus/content/repositories/android/"
}

def getSnapshotRepositoryUrl() {
    return "http://nexus.sdp.nd/nexus/content/repositories/android_snapshot/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

android {
    compileSdkVersion 27
    buildToolsVersion "26.0.3"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionName VERSION_NAME
    }

    sourceSets {
        main {
            manifest.srcFile "src/main/AndroidManifest.xml"
            java.srcDirs = ["src/main/java"]
            res.srcDirs = ["src/main/res"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                configurePOM(pom)

                repository(url: getReleaseRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
                snapshotRepository(url: getSnapshotRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }

    task androidJavadocs(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.source
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        //classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
        //classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}

private configurePOM(def pom) {
    pom.project {
        groupId "com.nd.sdp.android"
        artifactId "adhoc-push-util"
        version VERSION_NAME
        name "SDP-MODULE Library"
        packaging "aar"
        description "Android module"
    }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


repositories {
    maven {
        name 'nd nexus'
        url "http://nexus.sdp.nd/nexus/content/groups/android-public/"
    }
    mavenCentral()
}

dependencies {
}


